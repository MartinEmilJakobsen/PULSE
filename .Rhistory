geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p3 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(2))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p4 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(5))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+ theme(axis.title.y = element_blank())+ scale_y_continuous(labels=scaleFUN)
p1 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(4))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
# scale_color_gradient(low = "blue", high = "orange")+
facet_wrap( Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
# labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p2 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(3))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p3 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(2))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p4 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(5))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+ theme(axis.title.y = element_blank())+ scale_y_continuous(labels=scaleFUN)
plot <- arrangeGrob(p1,p2,p3,p4, ncol=1,left = textGrob("Relative Change in Performance Measure", rot = 90, vjust = 0))
p4
CovStructure
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = (phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2))
CovStructure
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = sqrt(phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2))
CovStructure
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = (phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2))
CovStructure
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
CovStructure
p1 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(3))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
# scale_color_gradient(low = "blue", high = "orange")+
facet_wrap( Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
# labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p2 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(2))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p3 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(4))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p4 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(1))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+ theme(axis.title.y = element_blank())+ scale_y_continuous(labels=scaleFUN)
plot <- arrangeGrob(p1,p2,p3,p4, ncol=1,left = textGrob("Relative Change in Performance Measure", rot = 90, vjust = 0))
ggsave(paste0("Plots/Multivariate_FixedConfounding_",ID,".png"), plot =plot, device = NULL, path = NULL,
scale = 1, width = 12, height = 9, units = c("in"),
dpi = 200, limitsize = FALSE)
ggsave(paste0("Plots/Multivariate_FixedConfounding_",ID,".png"), plot =plot, device = NULL, path = NULL,
scale = 1, width = 12, height = 18, units = c("in"),
dpi = 200, limitsize = FALSE)
CovStructure
# Read data
Data_Location <- "Data/Experiment_Multivariate_VaryingConfounding_Beta00_PULSE05_nSim_5000_nObsPerSim_50_nModel_10000_20200714024302.RDS"
ID <- "20200714024302"
dat <- readRDS(file=Data_Location)
# Finding models where PULSE is MSE superior to Fuller(4)
Optimal <- dat %>%
select(n,nModel,Type,MSE) %>%
unique() %>%
spread(Type,MSE) %>%
rowwise() %>%
mutate(TrueSuperior = case_when( min(eigen(PULSE05-Ful4)$values) > 0 ~ "Ful4",
min(eigen(Ful4-PULSE05)$values) > 0 ~ "PULSE05",
TRUE ~ "Not comparable")) %>%
select(n,nModel,TrueSuperior)
# Extracting Model Coefficients from data
Coefs <- dat %>%
filter(Type=="Ful1") %>%
select(nModel,ModelCoefs) %>%
unnest(cols=c(ModelCoefs)) %>%
mutate(Coef = rep(c(
"xi11",
"xi12",
"xi21",
"xi22",
"delta11",
"delta12",
"delta21",
"delta22",
"mu11",
"mu22",
"VepX1" ,
"VepX2" ,
"rhosq"),10000)
) %>%
unnest(cols=c(ModelCoefs)) %>%
spread(Coef,ModelCoefs) %>%
rename(RhoSq=rhosq)
# Percentage Better
left_join(
LossData %>% filter(Ful4>= PULSE05) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Better=n()) %>% select(-Type) %>% unique(),
LossData %>% filter(PULSE05>= Ful4) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Worse=n())%>% select(-Type) %>% unique(),
by = c("Cov","pm")) %>%
mutate(sum = Better+Worse, fractionBetter = round(100*Better/5000,1)) %>% arrange(pm)
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
CovStructure
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
CovStructure
Data_Location <- "Data/Experiment_Multivariate_FixedConfounding_nSim_5000_nObsPerSim_50_nModel_5000_20200714132856.RDS"
ID <- "20200714130951"
dat <- readRDS(file=Data_Location)
Optimal <- dat %>%
select(n,nModel,Type,MSE,Cov) %>%
unique() %>%
spread(Type,MSE) %>%
rowwise() %>%
mutate(TrueSuperior = case_when( min(eigen(PULSE05-Ful4)$values) > 0 ~ "Ful4",
min(eigen(Ful4-PULSE05)$values) > 0 ~ "PULSE",
TRUE ~ "Not comparable")) %>%
select(n,nModel,Cov,TrueSuperior)
Cors <- dat %>%
filter(Type=="Ful1") %>%
select(nModel,ModelCoefs,Cov) %>%
unnest(cols=c(ModelCoefs)) %>%
mutate(Coef = rep(c(
"xi11",
"xi12",
"xi21",
"xi22",
"phi1",
"phi2",
"eta"),20000)  ) %>%
unnest(cols=c(ModelCoefs)) %>%
spread(Coef,ModelCoefs) %>%
mutate(normRho = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
LossData <- dat  %>%
select(nModel,Cov,nSim,n,Type,MeanGn,Determinant,Trace,Bias) %>%
gather(pm, Value, c("Determinant",
"Trace",
"Bias")) %>%
mutate(pm = factor(pm, levels = c("Determinant",
"Trace",
"Bias"))) %>%
spread(Type,Value) %>%
ungroup() %>%
mutate("PULSE05 to Fuller4" = pmap_dbl(.l=list(Ful4,PULSE05,pm), .f=function(Ful4,PULSE05,pm){ (Ful4-PULSE05)/PULSE05 }),
"PULSE05 to Fuller1"  = pmap_dbl(.l=list(Ful1,PULSE05,pm), .f=function(Ful1,PULSE05,pm){ (Ful1-PULSE05)/PULSE05}),
"PULSE05 to OLS"  = pmap_dbl(.l=list(OLS,PULSE05,pm), .f=function(OLS,PULSE05,pm){ (OLS-PULSE05)/PULSE05}),
MinEigenMeanGn = map_dbl(.x= MeanGn,.f= function(x) {ifelse(is.double(eigen(x)$values),min(eigen(x)$values),NA)}),
MaxEigenMeanGn = map_dbl(.x= MeanGn,.f= function(x) {ifelse(is.double(eigen(x)$values),max(eigen(x)$values),NA)})) %>%
mutate(Superior = ifelse(Ful4<PULSE05,"Ful4","PULSE")) %>%
gather(Type,Value,c(-nModel,-Cov,-nSim,-n,-MeanGn,-pm,-Ful1,-Ful4,-OLS,-PULSE05,-MinEigenMeanGn,-MaxEigenMeanGn,-Superior))
Optimal %>% group_by(TrueSuperior) %>%  summarise(count = n())
# Percentage Better
left_join(
LossData %>% filter(Ful4>= PULSE05) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Better=n()) %>% select(-Type) %>% unique(),
LossData %>% filter(PULSE05>= Ful4) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Worse=n())%>% select(-Type) %>% unique(),
by = c("Cov","pm")) %>%
mutate(sum = Better+Worse, fractionBetter = round(100*Better/5000,1)) %>% arrange(pm)
PlotData <- left_join(left_join(LossData,Optimal,by=c("n","nModel","Cov")) ,Cors,by=c("nModel","Cov")) %>%
mutate(normRho = round(normRho,1)) %>%
arrange(normRho,-eta) %>%
mutate(Label = paste0("'||'*rho*'||'[2]:'",sprintf("%.3f",normRho),"'~~eta:'",sprintf("%.3f",eta),"'~~phi[1]:'",sprintf("%.3f",phi1),"'~~phi[2]:'",sprintf("%.3f",phi2),"'"))
scaleFUN <- function(x) sprintf("%.2f", x)
p1 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(3))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
# scale_color_gradient(low = "blue", high = "orange")+
facet_wrap( Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
# labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p2 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(2))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p3 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(4))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p4 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(1))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
#geom_point(aes(x=log(MinEigenMeanGn),y=Value,color=sqrt(MaxEigenMeanGn)),alpha=0.5,size=1)+
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
#scale_color_gradient(low = "blue", high = "orange")+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
#labs(colour="")+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+ theme(axis.title.y = element_blank())+ scale_y_continuous(labels=scaleFUN)
plot <- arrangeGrob(p1,p2,p3,p4, ncol=1,left = textGrob("Relative Change in Performance Measure", rot = 90, vjust = 0))
ggsave(paste0("Plots/Multivariate_FixedConfounding_",ID,".png"), plot =plot, device = NULL, path = NULL,
scale = 1, width = 12, height = 18, units = c("in"),
dpi = 200, limitsize = FALSE)
Data_Location <- "Data/Experiment_Multivariate_FixedConfounding_nSim_5000_nObsPerSim_50_nModel_5000_20200714132856.RDS"
ID <- "20200714130951"
dat <- readRDS(file=Data_Location)
Optimal <- dat %>%
select(n,nModel,Type,MSE,Cov) %>%
unique() %>%
spread(Type,MSE) %>%
rowwise() %>%
mutate(TrueSuperior = case_when( min(eigen(PULSE05-Ful4)$values) > 0 ~ "Ful4",
min(eigen(Ful4-PULSE05)$values) > 0 ~ "PULSE",
TRUE ~ "Not comparable")) %>%
select(n,nModel,Cov,TrueSuperior)
Cors <- dat %>%
filter(Type=="Ful1") %>%
select(nModel,ModelCoefs,Cov) %>%
unnest(cols=c(ModelCoefs)) %>%
mutate(Coef = rep(c(
"xi11",
"xi12",
"xi21",
"xi22",
"phi1",
"phi2",
"eta"),20000)  ) %>%
unnest(cols=c(ModelCoefs)) %>%
spread(Coef,ModelCoefs) %>%
mutate(normRho = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
Cors
# Calculating relative change in performance measures
LossData <- dat  %>%
select(nModel,Cov,nSim,n,Type,MeanGn,Determinant,Trace,Bias) %>%
gather(pm, Value, c("Determinant",
"Trace",
"Bias")) %>%
mutate(pm = factor(pm, levels = c("Determinant",
"Trace",
"Bias"))) %>%
spread(Type,Value) %>%
ungroup() %>%
mutate("PULSE05 to Fuller4" = pmap_dbl(.l=list(Ful4,PULSE05,pm), .f=function(Ful4,PULSE05,pm){ (Ful4-PULSE05)/PULSE05 }),
"PULSE05 to Fuller1"  = pmap_dbl(.l=list(Ful1,PULSE05,pm), .f=function(Ful1,PULSE05,pm){ (Ful1-PULSE05)/PULSE05}),
"PULSE05 to OLS"  = pmap_dbl(.l=list(OLS,PULSE05,pm), .f=function(OLS,PULSE05,pm){ (OLS-PULSE05)/PULSE05}),
MinEigenMeanGn = map_dbl(.x= MeanGn,.f= function(x) {ifelse(is.double(eigen(x)$values),min(eigen(x)$values),NA)}),
MaxEigenMeanGn = map_dbl(.x= MeanGn,.f= function(x) {ifelse(is.double(eigen(x)$values),max(eigen(x)$values),NA)})) %>%
mutate(Superior = ifelse(Ful4<PULSE05,"Ful4","PULSE")) %>%
gather(Type,Value,c(-nModel,-Cov,-nSim,-n,-MeanGn,-pm,-Ful1,-Ful4,-OLS,-PULSE05,-MinEigenMeanGn,-MaxEigenMeanGn,-Superior))
# Gathering Data for plot
PlotData <- left_join(left_join(LossData,Optimal,by=c("n","nModel","Cov")) ,Cors,by=c("nModel","Cov")) %>%
mutate(normRho = round(normRho,1)) %>%
arrange(normRho,-eta) %>%
mutate(Label = paste0("'||'*rho*'||'[2]:'",sprintf("%.3f",normRho),"'~~eta:'",sprintf("%.3f",eta),"'~~phi[1]:'",sprintf("%.3f",phi1),"'~~phi[2]:'",sprintf("%.3f",phi2),"'"))
scaleFUN <- function(x) sprintf("%.2f", x)
p1 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(3))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap( Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p2 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(2))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p3 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(4))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p4 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(1))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+ theme(axis.title.y = element_blank())+ scale_y_continuous(labels=scaleFUN)
plot <- arrangeGrob(p1,p2,p3,p4, ncol=1,left = textGrob("Relative Change in Performance Measure", rot = 90, vjust = 0))
ggsave(paste0("Plots/Multivariate_FixedConfounding_",ID,".png"), plot =plot, device = NULL, path = NULL,
scale = 1, width = 12, height = 18, units = c("in"),
dpi = 200, limitsize = FALSE)
# Gathering Data for plot
PlotData <- left_join(left_join(LossData,Optimal,by=c("n","nModel","Cov")) ,Cors,by=c("nModel","Cov")) %>%
arrange(normRho,-eta) %>%
mutate(Label = paste0("'||'*rho*'||'[2]:'",sprintf("%.3f",normRho),"'~~eta:'",sprintf("%.3f",eta),"'~~phi[1]:'",sprintf("%.3f",phi1),"'~~phi[2]:'",sprintf("%.3f",phi2),"'"))
scaleFUN <- function(x) sprintf("%.2f", x)
p1 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(3))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap( Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p2 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(2))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p3 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(4))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+
theme(axis.title.y = element_blank())+
theme(axis.title.x = element_blank())+ scale_y_continuous(labels=scaleFUN)
p4 <- ggplot(data=PlotData %>% filter(Type=="PULSE05 to Fuller4",Cov %in% c(1))) +
geom_hline(yintercept =0,color="black",linetype="solid") +
geom_vline(xintercept =log(15.5),color="black",linetype="dotted") +
geom_point(aes(x=log(MinEigenMeanGn),y=Value),alpha=0.1,size=1)+
facet_wrap(  Label ~ pm ,scales="free_y",ncol=3, labeller = label_parsed)+
xlab(expression(log(lambda[min](hat(E)[N](G[n])))))+
ylab(expression(paste("Relative change of performance measure")))+
theme(plot.margin = unit(c(0,0.8,0,0), "cm"))+ theme(axis.title.y = element_blank())+ scale_y_continuous(labels=scaleFUN)
plot <- arrangeGrob(p1,p2,p3,p4, ncol=1,left = textGrob("Relative Change in Performance Measure", rot = 90, vjust = 0))
ggsave(paste0("Plots/Multivariate_FixedConfounding_",ID,".png"), plot =plot, device = NULL, path = NULL,
scale = 1, width = 12, height = 18, units = c("in"),
dpi = 200, limitsize = FALSE)
# Percentage Better
left_join(
LossData %>% filter(Ful4>= PULSE05) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Better=n()) %>% select(-Type) %>% unique(),
LossData %>% filter(PULSE05>= Ful4) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Worse=n())%>% select(-Type) %>% unique(),
by = c("Cov","pm")) %>%
mutate(sum = Better+Worse, fractionBetter = round(100*Better/5000,1)) %>% arrange(pm)
# Percentage Better
left_join(
LossData %>% filter(Ful4>= PULSE05) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Better=n()) %>% select(-Type) %>% unique(),
LossData %>% filter(PULSE05>= Ful4) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Worse=n())%>% select(-Type) %>% unique(),
by = c("Cov","pm")) %>%
mutate(sum = Better+Worse, fractionBetter = round(100*Better/5000,1)) %>% arrange(pm)
LossData %>% filter(Ful4>= PULSE05) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Better=n()) %>% select(-Type) %>% unique(),
LossData %>% filter(PULSE05>= Ful4) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Worse=n())%>% select(-Type) %>% unique(),
by = c("Cov","pm")) %>%
mutate(sum = Better+Worse, fractionBetter = round(100*Better/5000,2)) %>% arrange(pm)
# Percentage Better
left_join(
LossData %>% filter(Ful4>= PULSE05) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Better=n()) %>% select(-Type) %>% unique(),
LossData %>% filter(PULSE05>= Ful4) %>% select(Cov,pm,nModel,Type)  %>% group_by(Cov,pm,Type) %>% summarise(Worse=n())%>% select(-Type) %>% unique(),
by = c("Cov","pm")) %>%
mutate(sum = Better+Worse, fractionBetter = round(100*Better/5000,2)) %>% arrange(pm)
CovStructure <- data.frame(
phi1 = c(0.75,  0.353553, 0.424264,  0.9),
phi2 = c(0.75,  0.353553, 0.424264,  0.9),
eta =  c(0.25,  0.25,     0.8,       0.8)
) %>%  mutate(RhoNorm = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
CovStructure
CovStructure <- data.frame(
phi1 = c(0.1897366597,  0.1549193338, 0.7589466387,  0.6196773353),
phi2 = c(0.1897366597,  0.1549193338, 0.7589466387,  0.6196773353),
eta =  c(0.8,           0.2,          0.8,           0.2)
) %>%  mutate(RhoNorm = sqrt((phi1^2+phi2^2-2*eta*phi1*phi2)/(1-eta^2)))
CovStructure
phi1 <- CovStructure[Cov,1]
CovStructure
